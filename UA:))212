game.ReplicatedStorage.GameData.LatestRoom.Changed:Wait()

local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()
local entity = spawner.Create({
	Entity = {
		Name = "A60",
		Asset = "rbxassetid://83115631769066",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {
			Enabled = false,
			Duration = 1
		},
		Shatter = true,
		Repair = false
	},
	Earthquake = {
		Enabled = false
	},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {9, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
	},
	Movement = {
		Speed = 400,
		Delay = 6,
		Reversed = false
	},
	Rebounding = {
		Enabled = true,
		Type = "Ambush", -- "Blitz"
		Min = 4,
		Max = 8,
		Delay = 0.5
	},
	Damage = {
		Enabled = true,
		Range = 100,
		Amount = 0.01
	},
	Crucifixion = {
		Enabled = true,
		Range = 4000000000000,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding", -- "Curious"
		Hints = {"Death", "Hints", "Go", "Here"},
		Cause = ""
	}
})

game.Lighting.MainColorCorrection.TintColor = Color3.fromRGB(60, 0, 0)
game.Lighting.MainColorCorrection.Contrast = 1
local tween = game:GetService("TweenService")
tween:Create(game.Lighting.MainColorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play()
local TweenService = game:GetService("TweenService")
local TW = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(20),{TintColor = Color3.fromRGB(255, 255, 255)})
TW:Play()

local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camara = game.Workspace.CurrentCamera
local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
 camara.CFrame = camara.CFrame * shakeCf
end)
camShake:Start()
camShake:ShakeOnce(50,35,0,2,1,6)

local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camara = game.Workspace.CurrentCamera

local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(cf)
	camara.CFrame = camara.CFrame * cf
end)

camShake:Start()
camShake:Shake(CameraShaker.Presets.Earthquake)


---====== Debug entity ======---

entity:SetCallback("OnSpawned", function()
-- Get a reference to the object and its Attachment in the Workspace
local part = workspace:WaitForChild("A60")
local object = part:WaitForChild("RushNew") -- Replace "MyObjectName" with the name of your object
local attachment = object:WaitForChild("ImageFace")  -- Get the Attachment attached to the object
local e = attachment:WaitForChild("Face")

object.CanCollide = false

 -- Get the ParticleEmitter attached to the Attachment
while true do
    e.Texture = "rbxassetid://12145534911"
    wait(0)
    e.Texture = "rbxassetid://12145554242"
    wait(0)
    e.Texture = "rbxassetid://12145599498"
    wait(0)
    e.Texture = "rbxassetid://12145599275"
    wait(0)
    e.Texture = "rbxassetid://12155335619"
    wait(0)
    e.Texture = "rbxassetid://12145598814"
    wait(0)
    e.Texture = "rbxassetid://12146135062"
    wait(0)
    e.Texture = "rbxassetid://11378285585"
    wait(0)
end

end)

entity:SetCallback("OnDespawning", function()
wait(0.7)
local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camara = game.Workspace.CurrentCamera
local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
 camara.CFrame = camara.CFrame * shakeCf
end)
camShake:Start()
camShake:ShakeOnce(50,50,0,2,1,6)

game.Lighting.MainColorCorrection.TintColor = Color3.fromRGB(60, 0, 0)
local TweenService = game:GetService("TweenService")
local a = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(5),{TintColor = Color3.fromRGB(0, 0, 0)})
local b = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(5),{TintColor = Color3.fromRGB(0, 60, 0)})
local c = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(10),{TintColor = Color3.fromRGB(100, 0, 0)})
local d = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(10),{TintColor = Color3.fromRGB(255, 255, 255)})

a:Play()
wait(5)
b:Play()
wait(5)
c:Play()
wait(5)
d:Play()

end)

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		print("Cokkkkkk")
	else
  task.spawn(function()
        local TweenService = game:GetService("TweenService")
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local RunService = game:GetService("RunService")

        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid", 5)
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local camera = Workspace.CurrentCamera

        local entityModel = Workspace:FindFirstChild("A60")
        if not entityModel then
            warn("Không tìm thấy model 'RipperMovings' trong Workspace!")
            return
        end

        -- Hàm set TimeScale cho tất cả ParticleEmitter trong model
        local function SetAllParticlesTimeScale(model, timescale)
            for _, descendant in ipairs(model:GetDescendants()) do
                if descendant:IsA("ParticleEmitter") then
                    descendant.TimeScale = timescale
                    print("Set TimeScale = "..timescale.." cho ParticleEmitter:", descendant.Name)
                end
            end
        end

        -- Tắt tất cả particle trên entity lúc jumpscare bắt đầu
        SetAllParticlesTimeScale(entityModel, 1)

        local primaryPart = entityModel:FindFirstChild("RushNew")
        if not primaryPart then
            warn("Không tìm thấy 'RushNew' bên trong 'RipperMovings'!")
            return
        end

        local ripeAttachment = primaryPart:FindFirstChild("ImageFace", true)
        if ripeAttachment and ripeAttachment:IsA("Attachment") then
            for _, child in ipairs(ripeAttachment:GetChildren()) do
                if child:IsA("ParticleEmitter") then
                    child.Texture = "rbxassetid://88243205150594"  -- ID texture của bạn
                    print("Đã đổi texture ParticleEmitter:", child.Name)
                end
            end
        end

        entityModel.PrimaryPart = primaryPart
        primaryPart.Anchored = true

        -- Khóa camera nhìn entity mỗi frame (không tween để mượt)
        camera.CameraType = Enum.CameraType.Scriptable
        local camConnection = RunService.RenderStepped:Connect(function()
            if primaryPart and primaryPart.Parent then
                camera.CFrame = CFrame.lookAt(camera.CFrame.Position, primaryPart.Position)
            else
                camConnection:Disconnect()
                camera.CameraType = Enum.CameraType.Custom
            end
        end)

        -- Tính toán vị trí dừng lại 4 stud trước người chơi
        local targetPosition = humanoidRootPart.Position - humanoidRootPart.CFrame.LookVector * -5

        -- Di chuyển entity tới vị trí đó trong 2 giây
        local moveTweenInfo = TweenInfo.new(0.6, Enum.EasingStyle.Linear)
        local moveTweenGoal = {CFrame = CFrame.new(targetPosition)}
        local moveTween = TweenService:Create(primaryPart, moveTweenInfo, moveTweenGoal)
        moveTween:Play()

        -- Khóa khả năng di chuyển của người chơi trong suốt thời gian entity di chuyển
        if humanoid then
            humanoid.WalkSpeed = 0
            humanoid.JumpPower = 0
            humanoid.AutoRotate = false
            humanoid.PlatformStand = true
        end

        -- Chờ đến khi tween di chuyển đến vị trí 4 stud trước người chơi kết thúc
        moveTween.Completed:Wait()

        -- Sau khi di chuyển xong, tiếp tục tween với thời gian rất dài và thay đổi TimeScale
        local longTweenInfo = TweenInfo.new(99999999999999, Enum.EasingStyle.Linear)
        local longTween = TweenService:Create(primaryPart, longTweenInfo, {CFrame = humanoidRootPart.CFrame})
        longTween:Play()

        wait(3)

        -- Thay đổi TimeScale của tất cả ParticleEmitter thành 0
        SetAllParticlesTimeScale(entityModel, 1)

        -- Mở lại khả năng di chuyển của người chơi
        if humanoid then
            humanoid.WalkSpeed = 0  -- mặc định walk speed (hoặc giá trị bạn muốn)
            humanoid.JumpPower = 0  -- mặc định jump power (hoặc giá trị bạn muốn)
            humanoid.AutoRotate = true
            humanoid.PlatformStand = false
        end

        -- Khóa người chơi
        local anchorPart = Instance.new("Part")
        anchorPart.Name = "JumpscareAnchor"
        anchorPart.Size = Vector3.new(1,1,1)
        anchorPart.Transparency = 1
        anchorPart.Anchored = true
        anchorPart.CanCollide = false
        anchorPart.CanTouch = false
        anchorPart.CanQuery = false
        anchorPart.Position = humanoidRootPart.Position
        anchorPart.Parent = Workspace

        local weld = Instance.new("WeldConstraint")
        weld.Part0 = humanoidRootPart
        weld.Part1 = anchorPart
        weld.Parent = humanoidRootPart

        -- Hàm lấy âm thanh từ Github, tải nếu chưa có
       function GitAud(soundgit,filename)
    SoundName=tostring(SoundName)
    local url=soundgit
    local FileName = filename
    writefile(FileName..".mp3", game:HttpGet(url))
    return (getcustomasset or getsynasset)(FileName..".mp3")
end

function CustomGitSound(soundlink, vol, filename)
    local sound = Instance.new("Sound")
    sound.SoundId = GitAud(soundlink, filename)
    sound.Parent = workspace
    sound.Name = "Music"
    sound.Volume = 15
   sound:Play()
end

CustomGitSound("https://github.com/Kotyara19k-Doorsspawner/Random-files/raw/main/A60JumpscareOld.mp3?raw=true", 1, " Music")
       wait(0.2)

        -- UI Jumpscare nháy ảnh
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "JumpscareOverlay"
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        screenGui.ResetOnSpawn = false
        screenGui.IgnoreGuiInset = true
        screenGui.DisplayOrder = 999999
        screenGui.Parent = player:WaitForChild("PlayerGui")

        local imageLabel = Instance.new("ImageLabel")
        imageLabel.Name = "JumpscareImage"
        imageLabel.BackgroundTransparency = 1
        imageLabel.BorderSizePixel = 0
        imageLabel.Position = UDim2.new(0, 0, 0, 0)
        imageLabel.Size = UDim2.new(1, 0, 1, 0)
        imageLabel.ScaleType = Enum.ScaleType.Stretch
        imageLabel.Visible = true
        imageLabel.Parent = screenGui

        local jumpscareImage1 = "rbxassetid://15095904306"
        local jumpscareImage2 = "rbxassetid://15095904306"

        local flashDuration = 1
        local flashStartTime = tick()

        task.spawn(function()
            while tick() - flashStartTime < flashDuration do
                imageLabel.Image = jumpscareImage1
                task.wait(0)
                if tick() - flashStartTime >= flashDuration then break end
                imageLabel.Image = jumpscareImage2
                task.wait(0)
            end
            imageLabel.Visible = false
        end)

        task.wait(flashDuration + 0.5)

        -- Giết người chơi ngay khi jumpscare kết thúc
        if humanoid then
            humanoid.Health = 0
        end

        -- Dọn dẹp
        if camConnection then camConnection:Disconnect() end
        camera.CameraType = Enum.CameraType.Custom

        if weld and weld.Parent then weld:Destroy() end
        if anchorPart and anchorPart.Parent then anchorPart:Destroy() end
        if screenGui and screenGui.Parent then screenGui:Destroy() end

        if entityModel and entityModel.Parent then
            entityModel:Destroy()
                   end
              end)

	end
end)

---====== Run entity ======---

entity:Run()
