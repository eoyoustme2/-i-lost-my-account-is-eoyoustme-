

-- Import spawner
local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()
local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- Khởi tạo entity
local entity = spawner.Create({
	Entity = {
		Name = "A60",
		Asset = "rbxassetid://16138462624",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {Enabled = false, Duration = 1},
		Shatter = true,
		Repair = false
	},
	Earthquake = {Enabled = true},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {40, 60, 0.1, 1}
	},
	Movement = {
		Speed = 200,
		Delay = 6,
		Reversed = false
	},
	Rebounding = {
		Enabled = true,
		Type = "Ambush",
		Min = 4,
		Max = 8,
		Delay = 0.1
	},
	Damage = {
		Enabled = true,
		Range = 100,
		Amount = 0.01
	},
	Crucifixion = {
		Enabled = true,
		Range = math.huge,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding",
		Hints = {"Death", "Hints", "Go", "Here"},
		Cause = ""
	}
})

-- Hiệu ứng ánh sáng
local lighting = game.Lighting
lighting.MainColorCorrection.TintColor = Color3.fromRGB(255, 0, 0)
lighting.MainColorCorrection.Contrast = 0.2
TweenService:Create(lighting.MainColorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play()
TweenService:Create(lighting.MainColorCorrection, TweenInfo.new(20), {TintColor = Color3.fromRGB(255, 255, 255)}):Play()

-- Camera Shake
local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camara = game.Workspace.CurrentCamera
local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
 camara.CFrame = camara.CFrame * shakeCf
end)
camShake:Start()
camShake:ShakeOnce(40,70,0,4,2,12)
local CameraShaker = require(game.ReplicatedStorage.CameraShaker)
local camara = game.Workspace.CurrentCamera

local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(cf)
	camara.CFrame = camara.CFrame * cf
end)

camShake:Start()
camShake:Shake(CameraShaker.Presets.Earthquake)

-- ================== ON SPAWN ==================
entity:SetCallback("OnSpawned", function()
	local part = workspace:WaitForChild("A60")
	local object = part:WaitForChild("RushNew")
	local attachment = object:WaitForChild("Main")
	local emitter = attachment:FindFirstChildWhichIsA("ParticleEmitter")

	object.CanCollide = false

	local running = true
	spawn(function()
		while running and emitter and emitter:IsDescendantOf(workspace) do
			local textures = {
				"rbxassetid://12145534911",
				"rbxassetid://12145554242",
				"rbxassetid://12145599498",
				"rbxassetid://12145599275",
				"rbxassetid://12155335619",
				"rbxassetid://12145598814",
				"rbxassetid://12146135062",
				"rbxassetid://11378285585"
			}
			for _, tex in ipairs(textures) do
				emitter.Texture = tex
				task.wait()
			end
		end
	end)

	entity:SetCallback("OnDespawning", function()
		running = false

		local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
			camera.CFrame = camera.CFrame * shakeCf
		end)
		camShake:Start()
		camShake:ShakeOnce(50, 50, 0, 2, 1, 6)

		local tints = {
			{Color = Color3.fromRGB(60, 0, 0), Time = 5},
			{Color = Color3.fromRGB(0, 60, 0), Time = 5},
			{Color = Color3.fromRGB(100, 0, 0), Time = 10},
			{Color = Color3.fromRGB(255, 255, 255), Time = 10}
		}

		for _, tint in ipairs(tints) do
			local t = TweenService:Create(lighting.MainColorCorrection, TweenInfo.new(tint.Time), {TintColor = tint.Color})
			t:Play()
			task.wait(tint.Time)
		end
	end)
end)

-- ================== ON DAMAGE ==================
entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		warn("Player chết")
	else
		task.spawn(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoid = character:WaitForChild("Humanoid")
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

			local entityModel = workspace:FindFirstChild("A60")
			local primaryPart = entityModel and entityModel:FindFirstChild("RushNew")
			if not primaryPart then return end

			-- Phát âm thanh jumpscare
			local sound = Instance.new("Sound", workspace)
			sound.SoundId = "rbxassetid://6459610652"
			sound.Volume = 3
			sound:Play()

			-- Di chuyển đến gần player
			primaryPart.Anchored = true
			entityModel.PrimaryPart = primaryPart
			local targetPos = humanoidRootPart.Position + humanoidRootPart.CFrame.LookVector * 4
			local moveTween = TweenService:Create(primaryPart, TweenInfo.new(0.1), {CFrame = CFrame.new(targetPos, camera.CFrame.Position)})
			moveTween:Play()
			moveTween.Completed:Wait()

			-- Khoá điều khiển
			humanoid.WalkSpeed = 0
			humanoid.PlatformStand = true

			-- Render camera
			local camConn
			camConn = RunService.RenderStepped:Connect(function()
				if character:GetAttribute("Hiding") then
					if camConn then camConn:Disconnect() end
					camera.CameraType = Enum.CameraType.Custom
					entityModel:Destroy()
				else
					local desiredPos = camera.CFrame.Position + camera.CFrame.LookVector * 4 + Vector3.new(0, 2, 0)
					primaryPart.CFrame = CFrame.new(desiredPos, camera.CFrame.Position)
					camera.CFrame = CFrame.lookAt(camera.CFrame.Position, primaryPart.Position)
				end
			end)

			-- Gây damage trong thời gian giới hạn
			local damageDuration = 1
			local startTime = tick()

			while tick() - startTime < damageDuration and humanoid.Health > 0 do
				if character:GetAttribute("Hiding") then break end
				humanoid.Health -= 4
				task.wait(0.04)
			end

			-- Cleanup
			if camConn then camConn:Disconnect() end
			camera.CameraType = Enum.CameraType.Custom
		end)
	end
end)

-- ================== CHẠY ENTITY ==================
entity:Run()
